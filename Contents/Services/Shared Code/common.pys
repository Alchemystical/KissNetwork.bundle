#!/usr/bin/env python

"""
KissNetwork shared code.
Shared common code.
"""

# import section(s) not included in Plex Plug-In Framwork
import sys, os, io, json
import domain as Domain

# constants
BUNDLE_PATH = Domain.BUNDLE_PATH
RESOURCES_PATH = os.path.join(BUNDLE_PATH, 'Contents', 'Resources')
MODULE_PATH = Domain.MODULE_PATH
SUPPORT_PATH = Domain.SUPPORT_PATH
LIST_VIEW_CLIENTS = ['Android', 'iOS']

# set constants from shared domain.pys
Domain_Dict = Domain.LoadDomainDict()
USER_AGENT = Domain.USER_AGENT

ANIME_BASE_URL = Domain_Dict['Anime']
ASIAN_BASE_URL = Domain_Dict['Asian']
CARTOON_BASE_URL = Domain_Dict['Cartoon']
MANGA_BASE_URL = Domain_Dict['Manga']

BASE_URL_LIST = [ANIME_BASE_URL, ASIAN_BASE_URL, CARTOON_BASE_URL, MANGA_BASE_URL]

BASE_URL_LIST_T = [
    ('Anime', ANIME_BASE_URL), ('Drama', ASIAN_BASE_URL),
    ('Cartoon', CARTOON_BASE_URL), ('Manga', MANGA_BASE_URL)
    ]

####################################################################################################
def GetTypeTitle(url):
    """ Get type title from URL """

    type_title = url.rsplit('/')[2].rsplit('kiss')[1].rsplit('.')[0].title()
    # correct type_title
    if type_title == 'Asian':
        type_title = 'Drama'

    return type_title

####################################################################################################
def GetBaseURL(url):
    """ Get base url for headers """

    base_url = 'http://' + url.split('/')[2]
    type_title = GetTypeTitle(base_url)
    if not (type_title, base_url) in BASE_URL_LIST_T:
        for node in BASE_URL_LIST:
            if node[0] == type_title:
                base_url = node[1]
                break

    return base_url

####################################################################################################
def CoverImageFileExist(image_file):
    """Check if resource file exist"""

    if image_file:
        return os.path.isfile(os.path.join(RESOURCES_PATH, image_file))
    else:
        return False

####################################################################################################
def CorrectCoverImage(string):
    """Correct Cover Image file name"""

    if string:
        name, ext = os.path.splitext(string)
        ext_l = ext.lower()

        if ext_l == '.jpg' or ext_l == '.png' or ext_l == '.gif':
            string = name + ext_l
        else:
            if ext_l == '.jp' or ext_l == '.pn':
                string = name + ext_l + 'g'
            elif ext_l == '.j':
                string = name + ext_l + 'pg'
            elif ext_l == '.p':
                string = name + ext_l + 'ng'
            elif ext_l == '.gi':
                string = name + ext_l + 'f'
            elif ext_l == '.g':
                string = name + ext_l + 'if'
            else:
                Log.Error('Content_url not valid picture | %s' %string)
                string = None
    else:
        pass

    return string
