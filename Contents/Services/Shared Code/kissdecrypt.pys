#!/usr/bin/env python

"""
Kissasian and Kisscaroon decryption
Created by: Twoure
Date:       08/05/2016
"""

from binascii import a2b_hex, b2a_hex, a2b_base64
from crypto.cipher.aes_cbc import AES_CBC
import requests
import common as Common

class KissDecryptkit(object):
    def __init__(self):
        #kissasian
        di = String.Base64Decode("XzMyYjgxMmU5YTEzMjFhZTBlODRhZjY2MGM0NzIyYjNhXw==")[1:-1]
        self.derived_drama_iv = a2b_hex(di)
        #kisscartoon
        ci = String.Base64Decode("X2E1ZThkMmU5YzE3MjFhZTBlODRhZDY2MGM0NzJjMWYzXw==")[1:-1]
        self.derived_cartoon_iv = a2b_hex(ci)

    def ensure_unicode(self, v):
        if isinstance(v, str):
            v = v.decode('utf8')
        return unicode(v)

    def decrypt(self, f, kind, url=None, headers=None, post_data=None):
        """decrypt video URL input depending on what site it came from"""

        headers.update({'X-Requested-With': 'XMLHttpRequest', 'Content-Length': '0'})
        if post_data:
            r = requests.post(Common.GetBaseURL(url) + '/External/RSK', headers=headers, data=post_data)
        else:
            r = requests.post(Common.GetBaseURL(url) + '/External/RSK', headers=headers)

        derived_key = Hash.SHA256(str(r.text), True)
        if kind == 'drama':
            return self.decrypt_input(f, derived_key, self.derived_drama_iv)

        return self.decrypt_input(f, derived_key, self.derived_cartoon_iv)

    def decrypt_input(self, f, key, iv):
        """decrypt video URL"""

        etb = a2b_base64(f)
        cipher = AES_CBC(key=key, keySize=32)
        return self.ensure_unicode(cipher.decrypt(etb, iv))

KissDecrypt = KissDecryptkit()
